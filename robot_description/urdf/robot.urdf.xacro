<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">
    <!-- TODO: xacro-ize everything: (http://wiki.ros.org/urdf/Tutorials/Using%20Xacro%20to%20Clean%20Up%20a%20URDF%20File) -->

    <xacro:property name="base_radius" value="0.085"/>
    <xacro:property name="base_height" value="0.1393"/>

    <xacro:property name="wheel_radius" value="0.03"/>
    <xacro:property name="wheel_thickness" value="0.008"/>
    <!-- assuming no offset in base link c of m, and that mesh is perfectly
         within bounds of collision cylinder -->
    <xacro:property name="wheel_z_offset" value="${base_height/2 - 0.0065}"/>

    <xacro:property name="caster_radius" value="0.0127"/>
    <!-- assuming no offset in base link c of m, and that mesh is perfectly
         within bounds of collision cylinder -->
    <xacro:property name="caster_z_offset"
                    value="${fabs(wheel_z_offset) + wheel_radius - caster_radius}"/>

    <xacro:property name="wheelbase_width" value="0.17923"/>
    <xacro:property name="wheelbase_length" value="0.12206"/>

    <xacro:property name="camera_width" value="0.025"/>
    <xacro:property name="camera_length" value="0.023862"/>
    <xacro:property name="camera_thickness" value="0.009"/>
    <xacro:property name="camera_mass" value="0.003"/>

    <xacro:property name="laser_length" value="0.09674"/>
    <xacro:property name="laser_width" value="0.07028"/>
    <xacro:property name="laser_height" value="0.0577"/>
    <xacro:property name="laser_mass" value="0.190"/>

    <xacro:include filename="$(find robot_description)/urdf/materials.xacro" />

    <link name="base_link">
        <visual>
            <geometry>
                <!-- TODO fix this mesh's orientation -->
                <mesh filename="package://robot_description/meshes/base.STL"/>
            </geometry>
            <material name="gray"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${base_height}" radius="${base_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="1.015"/>
            <!-- en.wikipedia.org/wiki/List_of_moments_of_inertia#List_of_3D_inertia_tensors -->
            <!-- 3D inertia tensor for solid cylinder -->
            <inertia ixx="0.00611" ixy="0" ixz="0" iyy="0.00611" iyz="0" izz="0.008937"/>
        </inertial>
    </link>

    <xacro:macro name="wheel" params="name parent_name reflect">
        <xacro:property name="link_name" value="${name}_link"/>
        <xacro:property name="joint_name" value="${parent_name}_to_${name}_joint"/>

        <link name="${link_name}">
            <visual>
                <geometry>
                    <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="0.011398"/>
                <!-- 3d inertia tensor for solid cylinder -->
                <inertia ixx="${2.612e-6}" ixy="0" ixz="0" iyy="${2.612e-6}" iyz="0" izz="${5.103e-6}"/>
            </inertial>
        </link>


        <joint name="${joint_name}" type="continuous">
            <parent link="${parent_name}_link"/>
            <child link="${link_name}"/>
            <origin xyz="0 ${reflect*wheelbase_width/2} -${wheel_z_offset}"
                    rpy="${-pi/2} 0 0"/>
            <axis xyz="0 0 1"/>
        </joint>

        <transmission name="${name}_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <actuator name="${name}_motor">
                <mechanicalReduction>51.45</mechanicalReduction>
            </actuator>
            <joint name="${joint_name}">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
        </transmission>
    </xacro:macro>
    <xacro:wheel name="left_wheel" parent_name="base" reflect="1"/>
    <xacro:wheel name="right_wheel" parent_name="base" reflect="-1"/>

    <xacro:macro name="caster" params="name parent_name reflect">
        <xacro:property name="link_name" value="${name}_link"/>

        <link name="${link_name}">
            <visual>
                <geometry>
                    <sphere radius="${caster_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${caster_radius}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="0.015"/>
                <!-- 3d inertia tensor for solid sphere -->
                <inertia ixx="${9.677e-7}" ixy="0" ixz="0" iyy="${9.677e-7}" iyz="0" izz="${9.677e-7}"/>
            </inertial>
        </link>

        <joint name="${parent_name}_to_${name}_joint" type="fixed">
            <parent link="${parent_name}_link"/>
            <child link="${link_name}"/>
            <origin xyz="${reflect*wheelbase_length/2} 0 -${caster_z_offset}"/>
            <dynamics friction="0"/>
        </joint>
    </xacro:macro>
    <xacro:caster name="front_caster" parent_name="base" reflect="1"/>
    <xacro:caster name="rear_caster" parent_name="base" reflect="-1"/>

    <!-- camera -->
    <xacro:property name="camera_sensor_x" value="0.009462"/>
    <link name="camera_link">
        <xacro:property name="camera_x_offset" value="${camera_length/2 - camera_sensor_x}"/>
        <visual>
            <geometry>
                <box size="${camera_thickness} ${camera_width} ${camera_length}"/>
            </geometry>
            <origin xyz="0 0 ${camera_x_offset}"/>
            <material name="green"/>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_thickness} ${camera_width} ${camera_length}"/>
            </geometry>
            <origin xyz="0 0 ${camera_x_offset}"/>
        </collision>
        <inertial>
            <mass value="${camera_mass}"/>
            <!-- inertia tensor approximation using cuboid -->
            <inertia ixx="${1.02979e-5}" ixy="0" ixz="0" iyy="${1.1178e-5}" iyz="0" izz="${1.8911e-5}"/>
            <origin xyz="0 0 ${camera_x_offset}"/>
        </inertial>
    </link>
    <joint name="base_to_camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_link"/>
        <origin xyz="${0.0602+camera_thickness/2} 0 ${base_height/2+0.0025+camera_sensor_x}"
                rpy="0 0 0"/>
        <axis xyz="1 0 0"/>
    </joint>

    <!-- laser -->
    <xacro:property name="laser_sensor_z" value="${0.042 - laser_height/2}"/>
    <link name="laser_link">
        <xacro:property name="laser_x_offset" value="${laser_length/2 - 0.03514}"/>
        <visual>
            <geometry>
                <mesh filename="package://robot_description/meshes/rplidar_main.STL"/>
            </geometry>
            <origin xyz="${-laser_x_offset} 0 ${-laser_sensor_z}"/>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <box size="${laser_length} ${laser_width} ${laser_height}"/>
            </geometry>
            <origin xyz="${-laser_x_offset} 0 ${-laser_sensor_z}"/>
        </collision>
        <inertial>
            <mass value="${laser_mass}"/>
            <!-- inertia tensor approximation using cuboid -->
            <inertia ixx="${2.0089e-4}" ixy="0" ixz="0" iyy="${2.2638e-4}" iyz="0" izz="${1.3092e-4}"/>
            <origin xyz="${-laser_x_offset} 0 ${-laser_sensor_z}"/>
        </inertial>
    </link>
    <joint name="base_to_laser_joint" type="fixed">
        <xacro:property name="laser_z_offset" value="${(base_height + laser_height) / 2 + laser_sensor_z}"/>
        <parent link="base_link"/>
        <child link="laser_link"/>
        <origin xyz="0 0 ${laser_z_offset}"
                rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>

    <xacro:include filename="$(find robot_description)/urdf/robot.gazebo.xacro" />
</robot>

