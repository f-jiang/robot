<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot_gazebo">
    <xacro:macro name="wheel_gazebo" params="name">
        <!-- This block provides the simulator (Gazebo) with information on a few additional
        physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
        <gazebo reference="${name}_link">
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>
    <xacro:wheel_gazebo name="left_wheel"/>
    <xacro:wheel_gazebo name="right_wheel"/>

    <xacro:macro name="caster_gazebo" params="name">
        <!-- This block provides the simulator (Gazebo) with information on a few additional
        physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
        <gazebo reference="${name}_link">
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />
            <material>Gazebo/White</material>
        </gazebo>
    </xacro:macro>
    <xacro:caster_gazebo name="front_caster"/>
    <xacro:caster_gazebo name="rear_caster"/>

    <!-- camera -->

    <gazebo reference="camera_link">
        <material>Gazebo/Green</material>
    </gazebo>

    <gazebo reference="camera_link">
        <sensor type="camera" name="camera">
            <!-- 60 fps in sensors_base.launch -->
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>${radians(62.2)}</horizontal_fov>
                <image>
                    <!-- img resolution from sensors_base.launch -->
                    <width>1024</width>
                    <height>576</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                         That pixel's noise value is added to each of its color
                         channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <robotNamespace>/</robotNamespace>
                <cameraName>camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- laser -->

    <gazebo reference="laser_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
</robot>
